[
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "permissions",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "viewsets",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "generics",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "filters",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "obtain_auth_token",
        "importPath": "rest_framework.authtoken.views",
        "description": "rest_framework.authtoken.views",
        "isExtraImport": true,
        "detail": "rest_framework.authtoken.views",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "reverse",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "registration_view",
        "importPath": "user_app.api.views",
        "description": "user_app.api.views",
        "isExtraImport": true,
        "detail": "user_app.api.views",
        "documentation": {}
    },
    {
        "label": "logout_view",
        "importPath": "user_app.api.views",
        "description": "user_app.api.views",
        "isExtraImport": true,
        "detail": "user_app.api.views",
        "documentation": {}
    },
    {
        "label": "api_view",
        "importPath": "rest_framework.decorators",
        "description": "rest_framework.decorators",
        "isExtraImport": true,
        "detail": "rest_framework.decorators",
        "documentation": {}
    },
    {
        "label": "RegistrationSerializer",
        "importPath": "user_app.api.serializers",
        "description": "user_app.api.serializers",
        "isExtraImport": true,
        "detail": "user_app.api.serializers",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "Token",
        "importPath": "rest_framework.authtoken.models",
        "description": "rest_framework.authtoken.models",
        "isExtraImport": true,
        "detail": "rest_framework.authtoken.models",
        "documentation": {}
    },
    {
        "label": "Token",
        "importPath": "rest_framework.authtoken.models",
        "description": "rest_framework.authtoken.models",
        "isExtraImport": true,
        "detail": "rest_framework.authtoken.models",
        "documentation": {}
    },
    {
        "label": "Token",
        "importPath": "rest_framework.authtoken.models",
        "description": "rest_framework.authtoken.models",
        "isExtraImport": true,
        "detail": "rest_framework.authtoken.models",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "user_app",
        "description": "user_app",
        "isExtraImport": true,
        "detail": "user_app",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "post_save",
        "importPath": "django.db.models.signals",
        "description": "django.db.models.signals",
        "isExtraImport": true,
        "detail": "django.db.models.signals",
        "documentation": {}
    },
    {
        "label": "receiver",
        "importPath": "django.dispatch",
        "description": "django.dispatch",
        "isExtraImport": true,
        "detail": "django.dispatch",
        "documentation": {}
    },
    {
        "label": "APITestCase",
        "importPath": "rest_framework.test",
        "description": "rest_framework.test",
        "isExtraImport": true,
        "detail": "rest_framework.test",
        "documentation": {}
    },
    {
        "label": "PageNumberPagination",
        "importPath": "rest_framework.pagination",
        "description": "rest_framework.pagination",
        "isExtraImport": true,
        "detail": "rest_framework.pagination",
        "documentation": {}
    },
    {
        "label": "LimitOffsetPagination",
        "importPath": "rest_framework.pagination",
        "description": "rest_framework.pagination",
        "isExtraImport": true,
        "detail": "rest_framework.pagination",
        "documentation": {}
    },
    {
        "label": "CursorPagination",
        "importPath": "rest_framework.pagination",
        "description": "rest_framework.pagination",
        "isExtraImport": true,
        "detail": "rest_framework.pagination",
        "documentation": {}
    },
    {
        "label": "WatchList",
        "importPath": "watchlist_app.models",
        "description": "watchlist_app.models",
        "isExtraImport": true,
        "detail": "watchlist_app.models",
        "documentation": {}
    },
    {
        "label": "StreamPlatform",
        "importPath": "watchlist_app.models",
        "description": "watchlist_app.models",
        "isExtraImport": true,
        "detail": "watchlist_app.models",
        "documentation": {}
    },
    {
        "label": "Review",
        "importPath": "watchlist_app.models",
        "description": "watchlist_app.models",
        "isExtraImport": true,
        "detail": "watchlist_app.models",
        "documentation": {}
    },
    {
        "label": "StreamPlatform",
        "importPath": "watchlist_app.models",
        "description": "watchlist_app.models",
        "isExtraImport": true,
        "detail": "watchlist_app.models",
        "documentation": {}
    },
    {
        "label": "WatchList",
        "importPath": "watchlist_app.models",
        "description": "watchlist_app.models",
        "isExtraImport": true,
        "detail": "watchlist_app.models",
        "documentation": {}
    },
    {
        "label": "Review",
        "importPath": "watchlist_app.models",
        "description": "watchlist_app.models",
        "isExtraImport": true,
        "detail": "watchlist_app.models",
        "documentation": {}
    },
    {
        "label": "StreamPlatform",
        "importPath": "watchlist_app.models",
        "description": "watchlist_app.models",
        "isExtraImport": true,
        "detail": "watchlist_app.models",
        "documentation": {}
    },
    {
        "label": "WatchList",
        "importPath": "watchlist_app.models",
        "description": "watchlist_app.models",
        "isExtraImport": true,
        "detail": "watchlist_app.models",
        "documentation": {}
    },
    {
        "label": "Review",
        "importPath": "watchlist_app.models",
        "description": "watchlist_app.models",
        "isExtraImport": true,
        "detail": "watchlist_app.models",
        "documentation": {}
    },
    {
        "label": "UserRateThrottle",
        "importPath": "rest_framework.throttling",
        "description": "rest_framework.throttling",
        "isExtraImport": true,
        "detail": "rest_framework.throttling",
        "documentation": {}
    },
    {
        "label": "UserRateThrottle",
        "importPath": "rest_framework.throttling",
        "description": "rest_framework.throttling",
        "isExtraImport": true,
        "detail": "rest_framework.throttling",
        "documentation": {}
    },
    {
        "label": "AnonRateThrottle",
        "importPath": "rest_framework.throttling",
        "description": "rest_framework.throttling",
        "isExtraImport": true,
        "detail": "rest_framework.throttling",
        "documentation": {}
    },
    {
        "label": "ScopedRateThrottle",
        "importPath": "rest_framework.throttling",
        "description": "rest_framework.throttling",
        "isExtraImport": true,
        "detail": "rest_framework.throttling",
        "documentation": {}
    },
    {
        "label": "DefaultRouter",
        "importPath": "rest_framework.routers",
        "description": "rest_framework.routers",
        "isExtraImport": true,
        "detail": "rest_framework.routers",
        "documentation": {}
    },
    {
        "label": "WatchListAV",
        "importPath": "watchlist_app.api.views",
        "description": "watchlist_app.api.views",
        "isExtraImport": true,
        "detail": "watchlist_app.api.views",
        "documentation": {}
    },
    {
        "label": "ReviewList",
        "importPath": "watchlist_app.api.views",
        "description": "watchlist_app.api.views",
        "isExtraImport": true,
        "detail": "watchlist_app.api.views",
        "documentation": {}
    },
    {
        "label": "ReviewDetail",
        "importPath": "watchlist_app.api.views",
        "description": "watchlist_app.api.views",
        "isExtraImport": true,
        "detail": "watchlist_app.api.views",
        "documentation": {}
    },
    {
        "label": "ReviewCreate",
        "importPath": "watchlist_app.api.views",
        "description": "watchlist_app.api.views",
        "isExtraImport": true,
        "detail": "watchlist_app.api.views",
        "documentation": {}
    },
    {
        "label": "StreamPlatformView",
        "importPath": "watchlist_app.api.views",
        "description": "watchlist_app.api.views",
        "isExtraImport": true,
        "detail": "watchlist_app.api.views",
        "documentation": {}
    },
    {
        "label": "WatchListDetailAV",
        "importPath": "watchlist_app.api.views",
        "description": "watchlist_app.api.views",
        "isExtraImport": true,
        "detail": "watchlist_app.api.views",
        "documentation": {}
    },
    {
        "label": "UserReview",
        "importPath": "watchlist_app.api.views",
        "description": "watchlist_app.api.views",
        "isExtraImport": true,
        "detail": "watchlist_app.api.views",
        "documentation": {}
    },
    {
        "label": "UserReviewbyURL",
        "importPath": "watchlist_app.api.views",
        "description": "watchlist_app.api.views",
        "isExtraImport": true,
        "detail": "watchlist_app.api.views",
        "documentation": {}
    },
    {
        "label": "UserReviewbyqueryparameter",
        "importPath": "watchlist_app.api.views",
        "description": "watchlist_app.api.views",
        "isExtraImport": true,
        "detail": "watchlist_app.api.views",
        "documentation": {}
    },
    {
        "label": "WatchListSV",
        "importPath": "watchlist_app.api.views",
        "description": "watchlist_app.api.views",
        "isExtraImport": true,
        "detail": "watchlist_app.api.views",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "WatchListSerializer",
        "importPath": "watchlist_app.api.serializers",
        "description": "watchlist_app.api.serializers",
        "isExtraImport": true,
        "detail": "watchlist_app.api.serializers",
        "documentation": {}
    },
    {
        "label": "StreamPlatformSerializer",
        "importPath": "watchlist_app.api.serializers",
        "description": "watchlist_app.api.serializers",
        "isExtraImport": true,
        "detail": "watchlist_app.api.serializers",
        "documentation": {}
    },
    {
        "label": "ReviewSerializer",
        "importPath": "watchlist_app.api.serializers",
        "description": "watchlist_app.api.serializers",
        "isExtraImport": true,
        "detail": "watchlist_app.api.serializers",
        "documentation": {}
    },
    {
        "label": "APIView",
        "importPath": "rest_framework.views",
        "description": "rest_framework.views",
        "isExtraImport": true,
        "detail": "rest_framework.views",
        "documentation": {}
    },
    {
        "label": "ValidationError",
        "importPath": "rest_framework.exceptions",
        "description": "rest_framework.exceptions",
        "isExtraImport": true,
        "detail": "rest_framework.exceptions",
        "documentation": {}
    },
    {
        "label": "IsAuthenticated",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "IsAuthenticatedOrReadOnly",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "IsAdminOrReadOnly",
        "importPath": "watchlist_app.api.permissions",
        "description": "watchlist_app.api.permissions",
        "isExtraImport": true,
        "detail": "watchlist_app.api.permissions",
        "documentation": {}
    },
    {
        "label": "IsReviewUserOrReadOnly",
        "importPath": "watchlist_app.api.permissions",
        "description": "watchlist_app.api.permissions",
        "isExtraImport": true,
        "detail": "watchlist_app.api.permissions",
        "documentation": {}
    },
    {
        "label": "ReviewCreateThrottle",
        "importPath": "watchlist_app.api.throttling",
        "description": "watchlist_app.api.throttling",
        "isExtraImport": true,
        "detail": "watchlist_app.api.throttling",
        "documentation": {}
    },
    {
        "label": "ReviewListThrottle",
        "importPath": "watchlist_app.api.throttling",
        "description": "watchlist_app.api.throttling",
        "isExtraImport": true,
        "detail": "watchlist_app.api.throttling",
        "documentation": {}
    },
    {
        "label": "DjangoFilterBackend",
        "importPath": "django_filters.rest_framework",
        "description": "django_filters.rest_framework",
        "isExtraImport": true,
        "detail": "django_filters.rest_framework",
        "documentation": {}
    },
    {
        "label": "WatchlistPagination",
        "importPath": "watchlist_app.api.pagination",
        "description": "watchlist_app.api.pagination",
        "isExtraImport": true,
        "detail": "watchlist_app.api.pagination",
        "documentation": {}
    },
    {
        "label": "WatchlistLimitOffsetPagination",
        "importPath": "watchlist_app.api.pagination",
        "description": "watchlist_app.api.pagination",
        "isExtraImport": true,
        "detail": "watchlist_app.api.pagination",
        "documentation": {}
    },
    {
        "label": "WatchlistCursorPagination",
        "importPath": "watchlist_app.api.pagination",
        "description": "watchlist_app.api.pagination",
        "isExtraImport": true,
        "detail": "watchlist_app.api.pagination",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "django.db.models.deletion",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.db.models.deletion",
        "description": "django.db.models.deletion",
        "detail": "django.db.models.deletion",
        "documentation": {}
    },
    {
        "label": "django.core.validators",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.core.validators",
        "description": "django.core.validators",
        "detail": "django.core.validators",
        "documentation": {}
    },
    {
        "label": "MinValueValidator",
        "importPath": "django.core.validators",
        "description": "django.core.validators",
        "isExtraImport": true,
        "detail": "django.core.validators",
        "documentation": {}
    },
    {
        "label": "MaxValueValidator",
        "importPath": "django.core.validators",
        "description": "django.core.validators",
        "isExtraImport": true,
        "detail": "django.core.validators",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "RegistrationSerializer",
        "kind": 6,
        "importPath": "user_app.api.serializers",
        "description": "user_app.api.serializers",
        "peekOfCode": "class RegistrationSerializer(serializers.ModelSerializer):\n    password2 = serializers.CharField(style={'input_type': 'password'}, write_only=True)\n    class Meta:\n        model = User\n        fields = ['username', 'email', 'password', 'password2']\n        extra_kwargs = {\n            'password': {'write_only': True}\n        }\n    def save(self):\n        password = self.validated_data['password']",
        "detail": "user_app.api.serializers",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "user_app.api.urls",
        "description": "user_app.api.urls",
        "peekOfCode": "urlpatterns = [\n    path('login/', obtain_auth_token, name='login'),\n    path('logout/', logout_view, name='logout'),\n    path('register/', registration_view, name='register'),\n    # path('api/token/', TokenObtainPairView.as_view(), name='token_obtain_pair'),\n    # path('api/token/refresh/', TokenRefreshView.as_view(), name='token_refresh'),\n]",
        "detail": "user_app.api.urls",
        "documentation": {}
    },
    {
        "label": "logout_view",
        "kind": 2,
        "importPath": "user_app.api.views",
        "description": "user_app.api.views",
        "peekOfCode": "def logout_view(request):\n    if request.method == 'POST':\n        request.user.auth_token.delete()\n        return Response(status=status.HTTP_200_OK)\n@api_view(['POST',])\ndef registration_view(request):\n    # refresh = RefreshToken.for_user(user)\n    if request.method == 'POST':\n        serializer = RegistrationSerializer(data=request.data)\n        data = {}",
        "detail": "user_app.api.views",
        "documentation": {}
    },
    {
        "label": "registration_view",
        "kind": 2,
        "importPath": "user_app.api.views",
        "description": "user_app.api.views",
        "peekOfCode": "def registration_view(request):\n    # refresh = RefreshToken.for_user(user)\n    if request.method == 'POST':\n        serializer = RegistrationSerializer(data=request.data)\n        data = {}\n        if serializer.is_valid():\n            account = serializer.save()\n            data['response'] = \"Registration Successful!\"\n            data['username'] = account.username\n            data['email'] = account.email",
        "detail": "user_app.api.views",
        "documentation": {}
    },
    {
        "label": "UserAppConfig",
        "kind": 6,
        "importPath": "user_app.apps",
        "description": "user_app.apps",
        "peekOfCode": "class UserAppConfig(AppConfig):\n    default_auto_field = \"django.db.models.BigAutoField\"\n    name = \"user_app\"",
        "detail": "user_app.apps",
        "documentation": {}
    },
    {
        "label": "create_auth_token",
        "kind": 2,
        "importPath": "user_app.models",
        "description": "user_app.models",
        "peekOfCode": "def create_auth_token(sender, instance=None, created=False, **kwargs):\n    if created:\n        Token.objects.create(user=instance)",
        "detail": "user_app.models",
        "documentation": {}
    },
    {
        "label": "RegisterTestCase",
        "kind": 6,
        "importPath": "user_app.tests",
        "description": "user_app.tests",
        "peekOfCode": "class RegisterTestCase(APITestCase):\n    def test_register(self):\n        data = {\n            \"username\": \"testcase\",\n            \"email\": \"testcase@example.com\",\n            \"password\": \"NewPassword@123\",\n            \"password2\": \"NewPassword@123\"\n        }\n        response = self.client.post(reverse('register'), data)\n        self.assertEqual(response.status_code, status.HTTP_201_CREATED)",
        "detail": "user_app.tests",
        "documentation": {}
    },
    {
        "label": "LoginLogoutTestCase",
        "kind": 6,
        "importPath": "user_app.tests",
        "description": "user_app.tests",
        "peekOfCode": "class LoginLogoutTestCase(APITestCase):\n    def setUp(self):\n        self.user = User.objects.create_user(username=\"example\", password=\"NewPassword@123\")\n    def test_login(self):\n        data = {\n            \"username\": \"example\",\n            \"password\": \"NewPassword@123\"\n        }\n        response = self.client.post(reverse('login'), data)\n        self.assertEqual(response.status_code, status.HTTP_200_OK)",
        "detail": "user_app.tests",
        "documentation": {}
    },
    {
        "label": "WatchlistPagination",
        "kind": 6,
        "importPath": "watchlist_app.api.pagination",
        "description": "watchlist_app.api.pagination",
        "peekOfCode": "class WatchlistPagination(PageNumberPagination):\n    page_size = 3\n    page_query_param = 'p'\n    page_size_query_param = 'size'\n    max_page_size = 10\n    last_page_strings = 'last'\nclass WatchlistLimitOffsetPagination(LimitOffsetPagination):\n    default_limit = 5\n    limit_query_param = 'limit'\n    offset_query_param = 'start'",
        "detail": "watchlist_app.api.pagination",
        "documentation": {}
    },
    {
        "label": "WatchlistLimitOffsetPagination",
        "kind": 6,
        "importPath": "watchlist_app.api.pagination",
        "description": "watchlist_app.api.pagination",
        "peekOfCode": "class WatchlistLimitOffsetPagination(LimitOffsetPagination):\n    default_limit = 5\n    limit_query_param = 'limit'\n    offset_query_param = 'start'\n    max_limit = 10\nclass WatchlistCursorPagination(CursorPagination):\n    page_size = 5\n    ordering = 'created'\n    cursor_query_param = 'record'",
        "detail": "watchlist_app.api.pagination",
        "documentation": {}
    },
    {
        "label": "WatchlistCursorPagination",
        "kind": 6,
        "importPath": "watchlist_app.api.pagination",
        "description": "watchlist_app.api.pagination",
        "peekOfCode": "class WatchlistCursorPagination(CursorPagination):\n    page_size = 5\n    ordering = 'created'\n    cursor_query_param = 'record'",
        "detail": "watchlist_app.api.pagination",
        "documentation": {}
    },
    {
        "label": "IsAdminOrReadOnly",
        "kind": 6,
        "importPath": "watchlist_app.api.permissions",
        "description": "watchlist_app.api.permissions",
        "peekOfCode": "class IsAdminOrReadOnly(permissions.IsAdminUser):\n    def has_permission(self, request, view):\n        if request.method in permissions.SAFE_METHODS:\n            return True\n        else:\n            return bool(request.user and request.user.is_staff)\n        # admin_permission = bool(request.user and request.user.is_staff)\n        # return request.method == \"GET\" or admin_permission\nclass IsReviewUserOrReadOnly(permissions.BasePermission):\n    \"\"\" Permission to make sure specific user has access to their individual reviews\"\"\"",
        "detail": "watchlist_app.api.permissions",
        "documentation": {}
    },
    {
        "label": "IsReviewUserOrReadOnly",
        "kind": 6,
        "importPath": "watchlist_app.api.permissions",
        "description": "watchlist_app.api.permissions",
        "peekOfCode": "class IsReviewUserOrReadOnly(permissions.BasePermission):\n    \"\"\" Permission to make sure specific user has access to their individual reviews\"\"\"\n    def has_object_permission(self, request, view, obj):\n        # Note that SAFE_METHODS means GET\n        if request.method in permissions.SAFE_METHODS:\n            return True\n        else:\n            return obj.review_user == request.user or request.user.is_staff",
        "detail": "watchlist_app.api.permissions",
        "documentation": {}
    },
    {
        "label": "ReviewSerializer",
        "kind": 6,
        "importPath": "watchlist_app.api.serializers",
        "description": "watchlist_app.api.serializers",
        "peekOfCode": "class ReviewSerializer(serializers.ModelSerializer):\n    review_user = serializers.StringRelatedField(read_only=True)\n    class Meta:\n        model = Review\n        # fields = \"__all__\"\n        exclude = ('watchlist',)\nclass WatchListSerializer(serializers.ModelSerializer):\n    # reviews = ReviewSerializer(many=True, read_only=True)\n    platform = serializers.CharField(source='platform.name')\n    class Meta:",
        "detail": "watchlist_app.api.serializers",
        "documentation": {}
    },
    {
        "label": "WatchListSerializer",
        "kind": 6,
        "importPath": "watchlist_app.api.serializers",
        "description": "watchlist_app.api.serializers",
        "peekOfCode": "class WatchListSerializer(serializers.ModelSerializer):\n    # reviews = ReviewSerializer(many=True, read_only=True)\n    platform = serializers.CharField(source='platform.name')\n    class Meta:\n        model = WatchList\n        fields = \"__all__\"\nclass StreamPlatformSerializer(serializers.ModelSerializer):\n    watchlist = WatchListSerializer(many=True, read_only = True)\n    class Meta:\n        model= StreamPlatform",
        "detail": "watchlist_app.api.serializers",
        "documentation": {}
    },
    {
        "label": "StreamPlatformSerializer",
        "kind": 6,
        "importPath": "watchlist_app.api.serializers",
        "description": "watchlist_app.api.serializers",
        "peekOfCode": "class StreamPlatformSerializer(serializers.ModelSerializer):\n    watchlist = WatchListSerializer(many=True, read_only = True)\n    class Meta:\n        model= StreamPlatform\n        fields = \"__all__\"",
        "detail": "watchlist_app.api.serializers",
        "documentation": {}
    },
    {
        "label": "ReviewCreateThrottle",
        "kind": 6,
        "importPath": "watchlist_app.api.throttling",
        "description": "watchlist_app.api.throttling",
        "peekOfCode": "class ReviewCreateThrottle(UserRateThrottle):\n    scope = \"review-create\"\nclass ReviewListThrottle(UserRateThrottle):\n    scope = \"review-list\"",
        "detail": "watchlist_app.api.throttling",
        "documentation": {}
    },
    {
        "label": "ReviewListThrottle",
        "kind": 6,
        "importPath": "watchlist_app.api.throttling",
        "description": "watchlist_app.api.throttling",
        "peekOfCode": "class ReviewListThrottle(UserRateThrottle):\n    scope = \"review-list\"",
        "detail": "watchlist_app.api.throttling",
        "documentation": {}
    },
    {
        "label": "router",
        "kind": 5,
        "importPath": "watchlist_app.api.urls",
        "description": "watchlist_app.api.urls",
        "peekOfCode": "router = DefaultRouter()\nrouter.register('stream', StreamPlatformView, basename='streamplatform')\nurlpatterns = [\n    path('',  WatchListAV.as_view(), name='watchlist'),\n    path('<int:pk>/', WatchListDetailAV.as_view(), name='watchlist-detail'),\n    path('list2/', WatchListSV.as_view(), name='watch-list'),\n    path('', include(router.urls)),\n    path('<int:pk>/review-create/', ReviewCreate.as_view(), name='review-create'),\n    path('<int:pk>/review/', ReviewList.as_view(), name='review-list'),\n    path('review/<int:pk>/', ReviewDetail.as_view(), name='review-detail'),",
        "detail": "watchlist_app.api.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "watchlist_app.api.urls",
        "description": "watchlist_app.api.urls",
        "peekOfCode": "urlpatterns = [\n    path('',  WatchListAV.as_view(), name='watchlist'),\n    path('<int:pk>/', WatchListDetailAV.as_view(), name='watchlist-detail'),\n    path('list2/', WatchListSV.as_view(), name='watch-list'),\n    path('', include(router.urls)),\n    path('<int:pk>/review-create/', ReviewCreate.as_view(), name='review-create'),\n    path('<int:pk>/review/', ReviewList.as_view(), name='review-list'),\n    path('review/<int:pk>/', ReviewDetail.as_view(), name='review-detail'),\n    path('reviews/me', UserReview.as_view(), name='user-review-detail'),\n    path('reviews/ruser=<str:username>/', UserReviewbyURL.as_view(), name='user-review-detail'),",
        "detail": "watchlist_app.api.urls",
        "documentation": {}
    },
    {
        "label": "UserReviewbyURL",
        "kind": 6,
        "importPath": "watchlist_app.api.views",
        "description": "watchlist_app.api.views",
        "peekOfCode": "class UserReviewbyURL(generics.ListAPIView):\n    \"\"\"This is a filtering method example\"\"\"\n    \"\"\"Filter against url or optional keyword\"\"\"\n    serializer_class = ReviewSerializer\n    def get_queryset(self):\n        username = self.kwargs['username']\n        return Review.objects.filter(review_user__username=username)\nclass UserReview(generics.ListAPIView):\n    \"\"\"This is a filtering method example\"\"\"\n    \"\"\"Filtering against current user\"\"\"",
        "detail": "watchlist_app.api.views",
        "documentation": {}
    },
    {
        "label": "UserReview",
        "kind": 6,
        "importPath": "watchlist_app.api.views",
        "description": "watchlist_app.api.views",
        "peekOfCode": "class UserReview(generics.ListAPIView):\n    \"\"\"This is a filtering method example\"\"\"\n    \"\"\"Filtering against current user\"\"\"\n    serializer_class = ReviewSerializer\n    def get_queryset(self):\n        username = self.request.user\n        return Review.objects.filter(review_user__username=username)\nclass UserReviewbyqueryparameter(generics.ListAPIView):\n    \"\"\"This is a filtering method example\"\"\"\n    \"\"\"Filter against query parameters \"\"\"",
        "detail": "watchlist_app.api.views",
        "documentation": {}
    },
    {
        "label": "UserReviewbyqueryparameter",
        "kind": 6,
        "importPath": "watchlist_app.api.views",
        "description": "watchlist_app.api.views",
        "peekOfCode": "class UserReviewbyqueryparameter(generics.ListAPIView):\n    \"\"\"This is a filtering method example\"\"\"\n    \"\"\"Filter against query parameters \"\"\"\n    serializer_class = ReviewSerializer\n    def get_queryset(self):\n        # queryset = Review.objects.all()\n        username = self.request.query_params.get('username', None)\n        return Review.objects.filter(review_user__username=username)\n        # if username is not None:\n        #     return Review.objects.filter(review_user__username=username)",
        "detail": "watchlist_app.api.views",
        "documentation": {}
    },
    {
        "label": "ReviewList",
        "kind": 6,
        "importPath": "watchlist_app.api.views",
        "description": "watchlist_app.api.views",
        "peekOfCode": "class ReviewList(generics.ListAPIView):\n    # queryset = Review.objects.all()\n    serializer_class = ReviewSerializer\n    permission_classes = [IsAuthenticatedOrReadOnly]\n    # throttle_classes = [UserRateThrottle, AnonRateThrottle]\n    # throttle_classes = [ReviewListThrottle, AnonRateThrottle]\n    filter_backends = [DjangoFilterBackend]\n    filterset_fields = ['review_user__username', 'active']\n    def get_queryset(self):\n        pk = self.kwargs['pk']",
        "detail": "watchlist_app.api.views",
        "documentation": {}
    },
    {
        "label": "ReviewCreate",
        "kind": 6,
        "importPath": "watchlist_app.api.views",
        "description": "watchlist_app.api.views",
        "peekOfCode": "class ReviewCreate(generics.CreateAPIView):\n    serializer_class = ReviewSerializer\n    permission_classes = [IsAuthenticated]\n    throttle_classes = [ReviewCreateThrottle]\n    def get_queryset(self):\n        return Review.objects.all()\n    def perform_create(self, serializer):\n        pk = self.kwargs.get('pk')\n        watchlistpk = WatchList.objects.get(pk=pk)\n        cur_review_user = self.request.user",
        "detail": "watchlist_app.api.views",
        "documentation": {}
    },
    {
        "label": "ReviewDetail",
        "kind": 6,
        "importPath": "watchlist_app.api.views",
        "description": "watchlist_app.api.views",
        "peekOfCode": "class ReviewDetail(generics.RetrieveUpdateDestroyAPIView):\n    queryset = Review.objects.all()\n    serializer_class = ReviewSerializer\n    throttle_classes = [ScopedRateThrottle]\n    throttle_scope = 'review-detail'\n    # def get_queryset(self):\n    #     pk = self.kwargs['pk']\n    #     return Review.objects.filter(watchlist=pk)\n    permission_classes = [IsReviewUserOrReadOnly]\n# class StreamPlatformView(viewsets.ReadOnlyModelViewSet):",
        "detail": "watchlist_app.api.views",
        "documentation": {}
    },
    {
        "label": "StreamPlatformView",
        "kind": 6,
        "importPath": "watchlist_app.api.views",
        "description": "watchlist_app.api.views",
        "peekOfCode": "class StreamPlatformView(viewsets.ModelViewSet):\n    \"\"\" With viewsets you can create both the list and detail\n    view with just short code and even auto generate your Url\n    \"\"\"\n    permission_classes = [IsAdminOrReadOnly]\n    queryset = StreamPlatform.objects.all()\n    serializer_class = StreamPlatformSerializer\nclass WatchListSV(generics.ListAPIView):\n    queryset = WatchList.objects.all()\n    serializer_class = WatchListSerializer",
        "detail": "watchlist_app.api.views",
        "documentation": {}
    },
    {
        "label": "WatchListSV",
        "kind": 6,
        "importPath": "watchlist_app.api.views",
        "description": "watchlist_app.api.views",
        "peekOfCode": "class WatchListSV(generics.ListAPIView):\n    queryset = WatchList.objects.all()\n    serializer_class = WatchListSerializer\n    # permission_classes = [IsAuthenticatedOrReadOnly]\n    # throttle_classes = [UserRateThrottle, AnonRateThrottle]\n    # throttle_classes = [ReviewListThrottle, AnonRateThrottle]\n    # filter_backends = [filters.SearchFilter]\n    # search_fields = ['title', 'platform__name']\n    # filter_backends = [filters.OrderingFilter]\n    # ordering_fields = ['avg_rating']",
        "detail": "watchlist_app.api.views",
        "documentation": {}
    },
    {
        "label": "WatchListAV",
        "kind": 6,
        "importPath": "watchlist_app.api.views",
        "description": "watchlist_app.api.views",
        "peekOfCode": "class WatchListAV(APIView):\n    # permission_classes = [IsAdminOrReadOnly]\n    def get(self, request):\n        movies = WatchList.objects.all()\n        serializer = WatchListSerializer(movies, many=True)\n        return Response(serializer.data)\n    def post(self, request):\n        serializer = WatchListSerializer(data=request.data)\n        if serializer.is_valid():\n            serializer.save()",
        "detail": "watchlist_app.api.views",
        "documentation": {}
    },
    {
        "label": "WatchListDetailAV",
        "kind": 6,
        "importPath": "watchlist_app.api.views",
        "description": "watchlist_app.api.views",
        "peekOfCode": "class WatchListDetailAV(APIView):\n    permission_classes = [IsAdminOrReadOnly]\n    def get(self, request, pk):\n        try:\n            movies = WatchList.objects.get(pk=pk)\n        except WatchList.DoesNotExist:\n            return Response({'Error': 'Movie not found'}, status=status.HTTP_404_NOT_FOUND )\n        serializer = WatchListSerializer(movies)\n        return Response(serializer.data)\n    def put(self, request, pk):",
        "detail": "watchlist_app.api.views",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "watchlist_app.migrations.0001_initial",
        "description": "watchlist_app.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = []\n    operations = [\n        migrations.CreateModel(\n            name=\"Movie\",\n            fields=[\n                (\n                    \"id\",\n                    models.BigAutoField(",
        "detail": "watchlist_app.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "watchlist_app.migrations.0002_streamplatform_watchlist_delete_movie",
        "description": "watchlist_app.migrations.0002_streamplatform_watchlist_delete_movie",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        (\"watchlist_app\", \"0001_initial\"),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name=\"StreamPlatform\",\n            fields=[\n                (\n                    \"id\",",
        "detail": "watchlist_app.migrations.0002_streamplatform_watchlist_delete_movie",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "watchlist_app.migrations.0003_rename_description_watchlist_storyline_and_more",
        "description": "watchlist_app.migrations.0003_rename_description_watchlist_storyline_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('watchlist_app', '0002_streamplatform_watchlist_delete_movie'),\n    ]\n    operations = [\n        migrations.RenameField(\n            model_name='watchlist',\n            old_name='description',\n            new_name='storyline',\n        ),",
        "detail": "watchlist_app.migrations.0003_rename_description_watchlist_storyline_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "watchlist_app.migrations.0004_review",
        "description": "watchlist_app.migrations.0004_review",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('watchlist_app', '0003_rename_description_watchlist_storyline_and_more'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Review',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('rating', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),",
        "detail": "watchlist_app.migrations.0004_review",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "watchlist_app.migrations.0005_review_active_review_update_review_watchlist",
        "description": "watchlist_app.migrations.0005_review_active_review_update_review_watchlist",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('watchlist_app', '0004_review'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='review',\n            name='active',\n            field=models.BooleanField(default=True),\n        ),",
        "detail": "watchlist_app.migrations.0005_review_active_review_update_review_watchlist",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "watchlist_app.migrations.0006_review_review_user",
        "description": "watchlist_app.migrations.0006_review_review_user",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        (\"watchlist_app\", \"0005_review_active_review_update_review_watchlist\"),\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name=\"review\",\n            name=\"review_user\",\n            field=models.ForeignKey(",
        "detail": "watchlist_app.migrations.0006_review_review_user",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "watchlist_app.migrations.0007_watchlist_abg_rating_watchlist_number_rating",
        "description": "watchlist_app.migrations.0007_watchlist_abg_rating_watchlist_number_rating",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        (\"watchlist_app\", \"0006_review_review_user\"),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name=\"watchlist\",\n            name=\"abg_rating\",\n            field=models.FloatField(default=0),\n        ),",
        "detail": "watchlist_app.migrations.0007_watchlist_abg_rating_watchlist_number_rating",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "watchlist_app.migrations.0008_rename_abg_rating_watchlist_avg_rating",
        "description": "watchlist_app.migrations.0008_rename_abg_rating_watchlist_avg_rating",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        (\"watchlist_app\", \"0007_watchlist_abg_rating_watchlist_number_rating\"),\n    ]\n    operations = [\n        migrations.RenameField(\n            model_name=\"watchlist\",\n            old_name=\"abg_rating\",\n            new_name=\"avg_rating\",\n        ),",
        "detail": "watchlist_app.migrations.0008_rename_abg_rating_watchlist_avg_rating",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "watchlist_app.migrations.0009_alter_streamplatform_website_and_more",
        "description": "watchlist_app.migrations.0009_alter_streamplatform_website_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        (\"watchlist_app\", \"0008_rename_abg_rating_watchlist_avg_rating\"),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name=\"streamplatform\",\n            name=\"website\",\n            field=models.URLField(max_length=100, unique=True),\n        ),",
        "detail": "watchlist_app.migrations.0009_alter_streamplatform_website_and_more",
        "documentation": {}
    },
    {
        "label": "WatchlistAppConfig",
        "kind": 6,
        "importPath": "watchlist_app.apps",
        "description": "watchlist_app.apps",
        "peekOfCode": "class WatchlistAppConfig(AppConfig):\n    default_auto_field = \"django.db.models.BigAutoField\"\n    name = \"watchlist_app\"",
        "detail": "watchlist_app.apps",
        "documentation": {}
    },
    {
        "label": "StreamPlatform",
        "kind": 6,
        "importPath": "watchlist_app.models",
        "description": "watchlist_app.models",
        "peekOfCode": "class StreamPlatform(models.Model):\n    name=models.CharField(max_length=30, unique=True)\n    about = models.CharField(max_length=150, unique=True)\n    website = models.URLField(max_length=100, unique=True)\n    def __str__(self):\n        return self.name\nclass WatchList(models.Model):\n    title = models.CharField(max_length=50 )\n    storyline = models.CharField(max_length=200)\n    platform = models.ForeignKey(StreamPlatform, on_delete=models.CASCADE, related_name=\"watchlist\")",
        "detail": "watchlist_app.models",
        "documentation": {}
    },
    {
        "label": "WatchList",
        "kind": 6,
        "importPath": "watchlist_app.models",
        "description": "watchlist_app.models",
        "peekOfCode": "class WatchList(models.Model):\n    title = models.CharField(max_length=50 )\n    storyline = models.CharField(max_length=200)\n    platform = models.ForeignKey(StreamPlatform, on_delete=models.CASCADE, related_name=\"watchlist\")\n    active = models.BooleanField(default=True)\n    avg_rating = models.FloatField(default=0)\n    number_rating = models.IntegerField(default=0)\n    created = models.DateTimeField(auto_now_add=True)\n    def __str__(self):\n        return self.title",
        "detail": "watchlist_app.models",
        "documentation": {}
    },
    {
        "label": "Review",
        "kind": 6,
        "importPath": "watchlist_app.models",
        "description": "watchlist_app.models",
        "peekOfCode": "class Review(models.Model):\n    review_user = models.ForeignKey(User, on_delete=models.CASCADE, related_name=\"userReview\")\n    rating = models.PositiveIntegerField(validators=[MinValueValidator(1), MaxValueValidator(5)])\n    description = models.CharField(max_length=200, null=True)\n    watchlist = models.ForeignKey(WatchList, on_delete=models.CASCADE, related_name=\"reviews\")\n    active = models.BooleanField(default=True)\n    created = models.DateTimeField(auto_now_add=True)\n    update = models.DateTimeField(auto_now=True)\n    def __str__(self):\n        return str(self.rating) + \"  |  \" + self.watchlist.title + \" | \" + str(self.review_user)",
        "detail": "watchlist_app.models",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "watchmate.asgi",
        "description": "watchmate.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "watchmate.asgi",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "watchmate.settings",
        "description": "watchmate.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = \"django-insecure-^gbksh^3d1&_h@hpgt)b$c*hqfkv40_x*=htw+lt(-03_w1i5&\"\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [",
        "detail": "watchmate.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "watchmate.settings",
        "description": "watchmate.settings",
        "peekOfCode": "SECRET_KEY = \"django-insecure-^gbksh^3d1&_h@hpgt)b$c*hqfkv40_x*=htw+lt(-03_w1i5&\"\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",",
        "detail": "watchmate.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "watchmate.settings",
        "description": "watchmate.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",\n    \"django.contrib.messages\",\n    \"django.contrib.staticfiles\",",
        "detail": "watchmate.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "watchmate.settings",
        "description": "watchmate.settings",
        "peekOfCode": "ALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",\n    \"django.contrib.messages\",\n    \"django.contrib.staticfiles\",\n    \"watchlist_app\",",
        "detail": "watchmate.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "watchmate.settings",
        "description": "watchmate.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",\n    \"django.contrib.messages\",\n    \"django.contrib.staticfiles\",\n    \"watchlist_app\",\n    'rest_framework',\n    'rest_framework.authtoken',",
        "detail": "watchmate.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "watchmate.settings",
        "description": "watchmate.settings",
        "peekOfCode": "MIDDLEWARE = [\n    \"django.middleware.security.SecurityMiddleware\",\n    \"django.contrib.sessions.middleware.SessionMiddleware\",\n    \"django.middleware.common.CommonMiddleware\",\n    \"django.middleware.csrf.CsrfViewMiddleware\",\n    \"django.contrib.auth.middleware.AuthenticationMiddleware\",\n    \"django.contrib.messages.middleware.MessageMiddleware\",\n    \"django.middleware.clickjacking.XFrameOptionsMiddleware\",\n]\nROOT_URLCONF = \"watchmate.urls\"",
        "detail": "watchmate.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "watchmate.settings",
        "description": "watchmate.settings",
        "peekOfCode": "ROOT_URLCONF = \"watchmate.urls\"\nTEMPLATES = [\n    {\n        \"BACKEND\": \"django.template.backends.django.DjangoTemplates\",\n        \"DIRS\": [],\n        \"APP_DIRS\": True,\n        \"OPTIONS\": {\n            \"context_processors\": [\n                \"django.template.context_processors.debug\",\n                \"django.template.context_processors.request\",",
        "detail": "watchmate.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "watchmate.settings",
        "description": "watchmate.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        \"BACKEND\": \"django.template.backends.django.DjangoTemplates\",\n        \"DIRS\": [],\n        \"APP_DIRS\": True,\n        \"OPTIONS\": {\n            \"context_processors\": [\n                \"django.template.context_processors.debug\",\n                \"django.template.context_processors.request\",\n                \"django.contrib.auth.context_processors.auth\",",
        "detail": "watchmate.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "watchmate.settings",
        "description": "watchmate.settings",
        "peekOfCode": "WSGI_APPLICATION = \"watchmate.wsgi.application\"\n# Database\n# https://docs.djangoproject.com/en/5.0/ref/settings/#databases\nDATABASES = {\n    \"default\": {\n        \"ENGINE\": \"django.db.backends.sqlite3\",\n        \"NAME\": BASE_DIR / \"db.sqlite3\",\n    }\n}\n# Password validation",
        "detail": "watchmate.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "watchmate.settings",
        "description": "watchmate.settings",
        "peekOfCode": "DATABASES = {\n    \"default\": {\n        \"ENGINE\": \"django.db.backends.sqlite3\",\n        \"NAME\": BASE_DIR / \"db.sqlite3\",\n    }\n}\n# Password validation\n# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators\nAUTH_PASSWORD_VALIDATORS = [\n    {",
        "detail": "watchmate.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "watchmate.settings",
        "description": "watchmate.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.UserAttributeSimilarityValidator\",\n    },\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.MinimumLengthValidator\",\n    },\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.CommonPasswordValidator\",\n    },",
        "detail": "watchmate.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "watchmate.settings",
        "description": "watchmate.settings",
        "peekOfCode": "LANGUAGE_CODE = \"en-us\"\nTIME_ZONE = \"UTC\"\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.0/howto/static-files/\nSTATIC_URL = \"static/\"\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"",
        "detail": "watchmate.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "watchmate.settings",
        "description": "watchmate.settings",
        "peekOfCode": "TIME_ZONE = \"UTC\"\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.0/howto/static-files/\nSTATIC_URL = \"static/\"\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\n# REST_FRAMEWORK = {",
        "detail": "watchmate.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "watchmate.settings",
        "description": "watchmate.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.0/howto/static-files/\nSTATIC_URL = \"static/\"\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\n# REST_FRAMEWORK = {\n#     # 'DEFAULT_AUTHENTICATION_CLASSES': [",
        "detail": "watchmate.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "watchmate.settings",
        "description": "watchmate.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.0/howto/static-files/\nSTATIC_URL = \"static/\"\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\n# REST_FRAMEWORK = {\n#     # 'DEFAULT_AUTHENTICATION_CLASSES': [\n#     #     'rest_framework.authentication.BasicAuthentication',",
        "detail": "watchmate.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "watchmate.settings",
        "description": "watchmate.settings",
        "peekOfCode": "STATIC_URL = \"static/\"\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\n# REST_FRAMEWORK = {\n#     # 'DEFAULT_AUTHENTICATION_CLASSES': [\n#     #     'rest_framework.authentication.BasicAuthentication',\n#     #     # 'rest_framework.authentication.SessionAuthentication',\n#     # ],\n#     '",
        "detail": "watchmate.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "watchmate.settings",
        "description": "watchmate.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\n# REST_FRAMEWORK = {\n#     # 'DEFAULT_AUTHENTICATION_CLASSES': [\n#     #     'rest_framework.authentication.BasicAuthentication',\n#     #     # 'rest_framework.authentication.SessionAuthentication',\n#     # ],\n#     '\n# }\nREST_FRAMEWORK = {\n    \"DEFAULT_AUTHENTICATION_CLASSES\": [",
        "detail": "watchmate.settings",
        "documentation": {}
    },
    {
        "label": "REST_FRAMEWORK",
        "kind": 5,
        "importPath": "watchmate.settings",
        "description": "watchmate.settings",
        "peekOfCode": "REST_FRAMEWORK = {\n    \"DEFAULT_AUTHENTICATION_CLASSES\": [\n        'rest_framework.authentication.TokenAuthentication',\n        # 'rest_framework.authentication.SessionAuthentication',\n    ],\n    'DEFAULT_THROTTLE_CLASSES': [\n    #     'rest_framework.throttling.AnonRateThrottle',\n    #     'rest_framework.throttling.UserRateThrottle'\n        'rest_framework.throttling.ScopedRateThrottle'\n    ],",
        "detail": "watchmate.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "watchmate.urls",
        "description": "watchmate.urls",
        "peekOfCode": "urlpatterns = [\n    path(\"admin/\", admin.site.urls),\n    path('watch/',  include('watchlist_app.api.urls')),\n    path('account/', include('user_app.api.urls')),\n]",
        "detail": "watchmate.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "watchmate.wsgi",
        "description": "watchmate.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "watchmate.wsgi",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "manage",
        "description": "manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault(\"DJANGO_SETTINGS_MODULE\", \"watchmate.settings\")\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "manage",
        "documentation": {}
    }
]